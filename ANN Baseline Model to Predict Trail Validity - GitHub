{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"vwSw8INOSUty"},"outputs":[],"source":["import pandas\n","pip install tensorflow-addons\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.wrappers.scikit_learn import KerasClassifier\n","from sklearn.model_selection import cross_val_score\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.pipeline import Pipeline\n","from tensorflow_addons import losses"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xoEVS6pnS8aP"},"outputs":[],"source":["import pandas as pd\n","from matplotlib import pyplot as plt"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20311,"status":"ok","timestamp":1681537845765,"user":{"displayName":"Mohamed Fadl","userId":"14347683118445347781"},"user_tz":-240},"id":"xQZYNEqJZsB-","outputId":"97477386-1994-452a-cb05-9bfa6c853629"},"outputs":[{"output_type":"stream","name":"stdout","text":["  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for tensorflow-docs (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["# Use seaborn for pairplot\n","!pip install -q seaborn\n","\n","# Use some functions from tensorflow_docs\n","!pip install -q git+https://github.com/tensorflow/docs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bYEvwS2_ZmUu"},"outputs":[],"source":["import tensorflow_docs as tfdocs\n","import tensorflow_docs.plots\n","import tensorflow_docs.modeling"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1681537847160,"user":{"displayName":"Mohamed Fadl","userId":"14347683118445347781"},"user_tz":-240},"id":"e8cTfgs4cFAu","outputId":"9bde25c3-e122-42e3-93da-84c918aca955"},"outputs":[{"output_type":"stream","name":"stdout","text":["2.12.0\n"]}],"source":["import tensorflow as tf\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","import numpy as np\n","\n","print(tf.__version__)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BTlEKxmZcKV7"},"outputs":[],"source":["all_dataset = pd.read_csv()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4dJumq95Uqrn"},"outputs":[],"source":["dataset = all_dataset.sample(frac=0.80,random_state=0)\n","test_dataset = all_dataset.drop(dataset.index)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X8Gvv4CSU2HD"},"outputs":[],"source":["dataset['sboxes'] = ((dataset['sboxes']/(dataset['round']*8)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dada87UmQP9F"},"outputs":[],"source":["test_dataset['sboxes'] = ((test_dataset['sboxes']/(test_dataset['round']*8)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mIOVq3G3w9dx"},"outputs":[],"source":["# Class count\n","count_class_0, count_class_1 = dataset.validity.value_counts()\n","\n","# Divide by class\n","df_class_0 = dataset[dataset['validity'] == 0]\n","df_class_1 = dataset[dataset['validity'] == 1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wtNzZyl-yWrE"},"outputs":[],"source":["df_class_0.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FggsXsDqycjM"},"outputs":[],"source":["df_class_1.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x_b6MO7yy9U9"},"outputs":[],"source":["#UnderSampling\n","# Undersample 0-class and concat the DataFrames of both class\n","df_class_0_under = df_class_0.sample(count_class_1)\n","train_dataset = pd.concat([df_class_0_under, df_class_1], axis=0)\n","\n","print('Random under-sampling:')\n","print(train_dataset.validity.value_counts())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2IWtvp82j9PH"},"outputs":[],"source":["train_labels = train_dataset.pop(\"validity\")\n","test_labels = test_dataset.pop(\"validity\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1za9mLhXIA1G"},"outputs":[],"source":["train_dataset['round'] = (train_dataset['round'])/100"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"chFFNqf7QvTx"},"outputs":[],"source":["test_dataset['round'] = (test_dataset['round'])/100"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1YbfL-U9blpi"},"outputs":[],"source":["from keras import backend as K\n","from tensorflow.python.framework import ops\n","from tensorflow.python.ops import math_ops\n","def root_mean_squared_error(y_true, y_pred):\n","        y_pred = ops.convert_to_tensor_v2(y_pred)\n","        y_true = math_ops.cast(y_true, y_pred.dtype)\n","        return K.sqrt(K.mean(K.square(y_pred - y_true))) "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T6vwwJyD9RZ4"},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow import keras\n","from sklearn.metrics import confusion_matrix , classification_report"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"s2k0D58J9fAf"},"outputs":[],"source":["from keras.layers import Dropout\n","from keras import regularizers\n","from keras.regularizers import l2, l1\n","from keras.callbacks import EarlyStopping\n","from keras.utils import plot_model\n","\n","reg_param=0.001\n","def ANN(X_train, y_train, X_test, y_test, loss, weights):\n","    model = keras.Sequential([\n","        layers.Dense(512, activation='relu' , input_shape=[50]),\n","        layers.Dense(512, activation='relu'),    \n","        layers.Dense(512, activation='relu'),\n","        layers.Dense(512, activation='relu'),     \n","      layers.Dense(1,activation='sigmoid' )\n","    ])\n","\n","    model.compile(optimizer='adam', loss=loss, metrics=['accuracy'])\n","    early_stop = keras.callbacks.EarlyStopping(monitor='accuracy', patience=10,restore_best_weights=True)\n","    if weights == -1:\n","        model.fit(X_train, y_train, epochs=50, callbacks=[early_stop])\n","    else:\n","        model.fit(X_train, y_train, epochs=100, class_weight = weights)\n","    \n","    print(model.evaluate(X_test, y_test))\n","    \n","    y_preds = model.predict(X_test)\n","    y_preds = np.round(y_preds)\n","    \n","    print(\"Classification Report: \\n\", classification_report(y_test, y_preds))\n","    \n","    return model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sb-Xu13e9pNf"},"outputs":[],"source":["model = ANN(train_dataset, train_labels, test_dataset, test_labels, tf.keras.losses.BinaryCrossentropy(), -1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"idyH1a2VTkZG"},"outputs":[],"source":["model.save('/content/drive/My Drive/Colab Notebooks/Truncated path validity/truncated_validity_model.h5')"]}],"metadata":{"colab":{"provenance":[{"file_id":"1qOIMzI8RU_OVMpTZtLpymE7NDhWk7-NN","timestamp":1682920227551},{"file_id":"1e_jglUg4MMjIVT3Ech5mcD5Ao0axdnUh","timestamp":1679896299945},{"file_id":"1F95evzrKOCB9uG0QHlAirQP0woBw-JjD","timestamp":1649919482018},{"file_id":"1XNX6cBVZBbst-8vIo6Kckjskc6QrxrJp","timestamp":1649876849479},{"file_id":"1FOClzkeYhOpmsXFix2Cn4uhwGJV5IvzK","timestamp":1645506200234},{"file_id":"1SuFNE_mdMqYNR8P6tWxhrF04We5kcbcz","timestamp":1645346085972},{"file_id":"1bn5cga2OxUGB-0qcjxLgEt23Y9RnkF8H","timestamp":1644210433026},{"file_id":"17yK9OQeEz9okxJFrIKcdUgoQk4v6vsoA","timestamp":1643792635151},{"file_id":"1kHamHyKYPX7tcKXgbvJA4IygZ1eievfd","timestamp":1630480896405},{"file_id":"1vEK3WlgVSZsZqDGaIZpq7vGbz-KGSYYU","timestamp":1630475856026},{"file_id":"12jX9K-nDt5zA8wRQ8zVK2Q3vJLhlYRUN","timestamp":1630136102875},{"file_id":"1fKsp9Y3kxE2AqLLXKXzwMM6YL9WfpHRy","timestamp":1630129420875},{"file_id":"1twXumKuudH0nPfTm2GuNEoGJGrQopSxs","timestamp":1621848144168},{"file_id":"1F3kjPodQ0YD0bjHmR9OibxSZKJcywplt","timestamp":1614666345063},{"file_id":"1Xd8Qsd3ljTBl1XDVbbYLj8YGRqrPOKYZ","timestamp":1614665728437},{"file_id":"1clRkaIFFtYdDOnQhDpMDwpn53-bsZ_Rk","timestamp":1614617296263},{"file_id":"1QFJ2Qp9ywjELo95uox6UEIjlq5VRzOqU","timestamp":1613197308470},{"file_id":"1vl7F4Uxb0XxJEy--GWsTixrPQYO37uZ6","timestamp":1613142498943},{"file_id":"17JnyL_zFEJvsJS6an7LsT_s7VLFBITCk","timestamp":1613118276680},{"file_id":"1y2OrG2MO6qDbarIOO1vbL5E7a-T3imCi","timestamp":1612413456076},{"file_id":"1c433s6H8Ijphjvb71j0V5iskPp3istOX","timestamp":1612412676068},{"file_id":"1kwvfhZfjD4kkA7c9i5URiBhtbv94GCNi","timestamp":1612165346030},{"file_id":"1fDZ8end-A8Te1I2H7eNfH0XdgoafWKvZ","timestamp":1612165075185},{"file_id":"1CPzSaHNAL_Mi5VUdjUXzdaV0fStPewMi","timestamp":1612164431961},{"file_id":"1l8LfnbcmyCXind6J_-p7HL2JgxSN0CMc","timestamp":1612074208176},{"file_id":"1quYTubXW1P3kHuV77ePLTpovQ500awBz","timestamp":1611642155557},{"file_id":"1tJ-SGxQpKvtRWhdbj4saodIMhi7Zklmx","timestamp":1611414195400},{"file_id":"1wWTOJG_oPaAo7pNBw0LgM9XhYhgrL50m","timestamp":1611299481468},{"file_id":"1d1IL-2RWBUFudJ4ds0sftLGBywNFut0Q","timestamp":1610776119344},{"file_id":"1I3KPCGOuq-U01FwAzt8LdxEsSR1RbfI_","timestamp":1607347201546},{"file_id":"1HIzqWazLwmb6Dn2kC3Y8R2WQ_KqWVW5a","timestamp":1606758297741},{"file_id":"1P2TKX9YRJ8r5gfV3a5vrbkvYkmxm7FX_","timestamp":1603083240735},{"file_id":"1wC20zD392mfBtNIoe6J_cXhV-EGdrxcb","timestamp":1600765430534},{"file_id":"1ZYvrdkMiRrwscmgm53OjAcsfHuXHm1MW","timestamp":1600159694636},{"file_id":"1ibLY2AAQdCdMvYYCacER4wS_WOu5l0Of","timestamp":1599544985251},{"file_id":"1A79zfn0n1aqUF6pMLbSxn5eB9Vr8ywLK","timestamp":1599543487510},{"file_id":"1EJEvfhV2F9uamKpOSf_7Z94Ww-fdJFlj","timestamp":1599454621682},{"file_id":"17vzrtchxJNRkgSNuySF7pULytNFo19mw","timestamp":1599036423902},{"file_id":"1x0fRHSzCUVDtp8um-CzUgzngO-BzMGXD","timestamp":1596438119796},{"file_id":"1GM8pbIVieRFr8ge__666JDPNRpX5zMAU","timestamp":1596431405881},{"file_id":"1u_l_uTGyqhsXq8D_aWbrmxfw9jUz_j0G","timestamp":1596430802338},{"file_id":"1ahTCH9PliTAhW-NXwi1AkqR63me8ll5x","timestamp":1596008116671},{"file_id":"1GEuIhAkhDwsrROnY9EE8XrhVnnGZrxy8","timestamp":1596003702192},{"file_id":"1IEzjkMXXHrEqcwVhm1Fri2wlaxn0hNbE","timestamp":1595946652423},{"file_id":"1WQ2SOh341uRzMT-MM-3Qm-jvJXs41656","timestamp":1595944566393},{"file_id":"1rf6vjTe2q2Qb5Yc81zilm9kRzhJqYjiA","timestamp":1595940326568},{"file_id":"1XIOy3d-aRgGi39YCAwWjGCcOXgiAMSbb","timestamp":1595913122148},{"file_id":"1Y5Yz5Cpq0w-r2202ixxyPMARWXT9HU8E","timestamp":1594489285392},{"file_id":"1mZiwpPqx-nXoEnEeRTQNDmzys1O7CXXD","timestamp":1594484741408},{"file_id":"1kb2weqeYCUrFrErjM1t2Gn00iDK5am63","timestamp":1593329253981},{"file_id":"13t1317Hz9Sc5CBzGyam2wG-bTPP8wVC9","timestamp":1593282827427},{"file_id":"1RCkE6u7jL01-lmwI5qf2egvYAsbajVUS","timestamp":1593157719512}],"mount_file_id":"1qOIMzI8RU_OVMpTZtLpymE7NDhWk7-NN","authorship_tag":"ABX9TyP9prQ/ZPXxxP5cSKtqt0S5"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}